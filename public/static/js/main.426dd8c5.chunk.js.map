{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_success","launch_year","launch_date_local","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","components_MissionKey","react_apollo_browser_umd","query","loading","error","data","console","log","launches","map","components_LaunchItem","key","Component","LAUNCH_QUERY","Launch_templateObject","Launch","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","match","params","parseInt","variables","_data$launch","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","component","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","style","width","display","margin","Route","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.426dd8c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.adbf010c.png\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LaunchItem({\r\n  launch: {\r\n    flight_number,\r\n    mission_name,\r\n    launch_year,\r\n    launch_success,\r\n    launch_date_local\r\n  }\r\n}) {\r\n  return (\r\n    <div className=\"card card-body my-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>\r\n            Mission:{\" \"}\r\n            <span\r\n              className={classNames({\r\n                \"text-success\": launch_success,\r\n                \"text-danger\": !launch_success\r\n              })}\r\n            >\r\n              {mission_name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Launch Date:{\" \"}\r\n            <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LaunchItem;\r\n","import React from \"react\";\r\n\r\nfunction MissionKey() {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-success\" /> = SUCCESS\r\n      </p>\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-danger\" /> = FAILURE\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MissionKey;\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport LaunchItem from \"./LaunchItem\";\r\n\r\nimport MissionKey from \"./MissionKey\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query launchesQuery {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n    }\r\n  }\r\n`;\r\nclass Launches extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4 my-3\">Launches</h1>\r\n        <MissionKey />\r\n        <Query query={LAUNCHES_QUERY}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            return (\r\n              <div>\r\n                {data.launches.map(launch => (\r\n                  <LaunchItem key={launch.flight_number} launch={launch} />\r\n                ))}\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launches;\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Launches from \"./Launches\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query launchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n\r\n    return (\r\n      <div>\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n            let {\r\n              mission_name,\r\n              launch_year,\r\n              launch_success,\r\n              flight_number,\r\n              rocket: { rocket_id, rocket_name, rocket_type }\r\n            } = data.launch;\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch successful:{\" \"}\r\n                    <span\r\n                      className={classNames({\r\n                        \"text-success\": launch_success,\r\n                        \"text-danger\": !launch_success\r\n                      })}\r\n                    >\r\n                      {launch_success ? \"Yes\" : \"No\"}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n\r\n                <Link\r\n                  to=\"/\"\r\n                  component={Launches}\r\n                  className=\"btn btn-secondary my-3\"\r\n                >\r\n                  Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;\r\n","import React, { Component } from \"react\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport logo from \"./logo.png\";\nimport \"./App.css\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX logo\"\n              style={{ width: 300, display: \"block\", margin: \"auto\" }}\n            />\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}